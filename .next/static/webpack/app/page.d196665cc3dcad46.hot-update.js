"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useTasks.ts":
/*!*******************************!*\
  !*** ./src/hooks/useTasks.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTasks: function() { return /* binding */ useTasks; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst STORAGE_KEY = \"life-game-tasks\";\nconst STORAGE_VERSION = \"1.1\";\nconst useTasks = ()=>{\n    const [tasks, setTasks] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Load tasks from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const loadTasks = ()=>{\n            try {\n                setIsLoading(true);\n                setError(null);\n                const savedData = localStorage.getItem(STORAGE_KEY);\n                if (!savedData) {\n                    setTasks([]);\n                    return;\n                }\n                const parsedData = JSON.parse(savedData);\n                // Check if data version is compatible\n                if (parsedData.version !== STORAGE_VERSION) {\n                    console.warn(\"Storage version mismatch, clearing old data\");\n                    localStorage.removeItem(STORAGE_KEY);\n                    setTasks([]);\n                    return;\n                }\n                // Parse tasks and convert dates\n                const parsedTasks = parsedData.tasks.map((task)=>{\n                    var _task_timeEntries;\n                    return {\n                        ...task,\n                        completedAt: new Date(task.completedAt),\n                        timeEntries: ((_task_timeEntries = task.timeEntries) === null || _task_timeEntries === void 0 ? void 0 : _task_timeEntries.map((entry)=>({\n                                ...entry,\n                                startTime: new Date(entry.startTime),\n                                endTime: new Date(entry.endTime)\n                            }))) || []\n                    };\n                });\n                setTasks(parsedTasks);\n            } catch (error) {\n                console.error(\"Error loading tasks:\", error);\n                setError(\"Failed to load saved tasks\");\n                setTasks([]);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        loadTasks();\n    }, []);\n    // Save tasks to localStorage whenever tasks change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isLoading) {\n            try {\n                const storageData = {\n                    version: STORAGE_VERSION,\n                    tasks,\n                    lastUpdated: new Date().toISOString()\n                };\n                localStorage.setItem(STORAGE_KEY, JSON.stringify(storageData));\n            } catch (error) {\n                console.error(\"Error saving tasks:\", error);\n                setError(\"Failed to save tasks\");\n            }\n        }\n    }, [\n        tasks,\n        isLoading\n    ]);\n    const addTask = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((category, duration, score)=>{\n        const treasureValue = Math.round(duration / 60 * score / 10 * 10) / 10;\n        const now = new Date();\n        const newTask = {\n            id: crypto.randomUUID(),\n            categoryId: category.id,\n            categoryName: category.name,\n            description: \"\",\n            duration,\n            score,\n            completedAt: now,\n            treasureValue,\n            timeEntries: [\n                {\n                    startTime: new Date(now.getTime() - duration * 1000),\n                    endTime: now,\n                    duration\n                }\n            ]\n        };\n        setTasks((prev)=>[\n                newTask,\n                ...prev\n            ]);\n        return newTask;\n    }, []);\n    const updateTaskDescription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((taskId, description)=>{\n        setTasks((prev)=>prev.map((task)=>task.id === taskId ? {\n                    ...task,\n                    description\n                } : task));\n    }, []);\n    const logTimeToTask = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((taskId, sessionDuration)=>{\n        setTasks((prev)=>prev.map((task)=>{\n                if (task.id === taskId) {\n                    const now = new Date();\n                    const newEntry = {\n                        startTime: new Date(now.getTime() - sessionDuration * 1000),\n                        endTime: now,\n                        duration: sessionDuration\n                    };\n                    return {\n                        ...task,\n                        duration: task.duration + sessionDuration,\n                        completedAt: now,\n                        timeEntries: [\n                            ...task.timeEntries,\n                            newEntry\n                        ]\n                    };\n                }\n                return task;\n            }));\n    }, []);\n    const deleteTask = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((taskId)=>{\n        setTasks((prev)=>prev.filter((task)=>task.id !== taskId));\n    }, []);\n    const updateTask = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((taskId, updates)=>{\n        setTasks((prev)=>prev.map((task)=>task.id === taskId ? {\n                    ...task,\n                    ...updates\n                } : task));\n    }, []);\n    const clearAllTasks = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (window.confirm(\"Are you sure you want to delete all tasks? This action cannot be undone.\")) {\n            setTasks([]);\n            localStorage.removeItem(STORAGE_KEY);\n        }\n    }, []);\n    const exportTasks = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        try {\n            const dataStr = JSON.stringify(tasks, null, 2);\n            const dataBlob = new Blob([\n                dataStr\n            ], {\n                type: \"application/json\"\n            });\n            const url = URL.createObjectURL(dataBlob);\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.download = \"life-game-tasks-\".concat(new Date().toISOString().split(\"T\")[0], \".json\");\n            link.click();\n            URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error(\"Error exporting tasks:\", error);\n            setError(\"Failed to export tasks\");\n        }\n    }, [\n        tasks\n    ]);\n    const importTasks = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((file)=>{\n        const reader = new FileReader();\n        reader.onload = (e)=>{\n            try {\n                var _e_target;\n                const importedTasks = JSON.parse((_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result);\n                if (Array.isArray(importedTasks)) {\n                    const validTasks = importedTasks.filter((task)=>task.id && task.description && task.duration).map((task)=>({\n                            ...task,\n                            completedAt: new Date(task.completedAt)\n                        }));\n                    setTasks(validTasks);\n                    setError(null);\n                } else {\n                    throw new Error(\"Invalid file format\");\n                }\n            } catch (error) {\n                console.error(\"Error importing tasks:\", error);\n                setError(\"Failed to import tasks. Please check the file format.\");\n            }\n        };\n        reader.readAsText(file);\n    }, []);\n    const getStats = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const totalTasks = tasks.length;\n        const totalTime = tasks.reduce((sum, task)=>sum + task.duration, 0);\n        const averageScore = totalTasks > 0 ? tasks.reduce((sum, task)=>sum + task.score, 0) / totalTasks : 0;\n        const totalTreasureValue = tasks.reduce((sum, task)=>sum + task.treasureValue, 0);\n        return {\n            totalTasks,\n            totalTime,\n            averageScore: Math.round(averageScore * 10) / 10,\n            totalTreasureValue: Math.round(totalTreasureValue * 10) / 10\n        };\n    }, [\n        tasks\n    ]);\n    return {\n        tasks,\n        addTask,\n        updateTaskDescription,\n        logTimeToTask,\n        deleteTask,\n        updateTask,\n        clearAllTasks,\n        exportTasks,\n        importTasks,\n        getStats,\n        isLoading,\n        error\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useTasks.ts\n"));

/***/ })

});